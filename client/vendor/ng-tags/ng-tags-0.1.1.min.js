function NGTagsController(a){var b=this;this.events={enter:!0,space:!1,comma:!1},a.getTagsClass=function(){return"label-default"},a.uniqueTags()&&(a.tags=(a.tags||[]).filter(function(a,b,c){return c.indexOf(a)==b})),a.tagEvents()&&(this.events.enter=!1,a.tagEvents().split(" ").forEach(function(a){b.events[a]=!0})),a.$watch(function(){return a.tagClass()},function(b){b&&("function"==typeof b&&(a.getTagsClass=b),"string"==typeof b&&(a.getTagsClass=function(){return b}))}),a.$on("enter pressed",function(){b.events.enter&&b.addTag(a,a.newTag)}),a.$on("space pressed",function(){b.events.space&&b.addTag(a,a.newTag)}),a.$on("comma pressed",function(){b.events.comma&&b.addTag(a,a.newTag)}),a.$on("backspace pressed",function(){a.tags.pop()}),a.removeTag=function(b){var c=a.tags.indexOf(b);c>=0&&a.tags.splice(c,1)}}var module=angular.module("ui.ngTags",["ui.ngTags.templates"]);NGTagsController.prototype.addTag=function(a,b){a.tags&&Array.isArray(a.tags)||(a.tags=[]),b=angular.copy(b),a.replaceSpaces()&&!this.events.space&&(b=b.replace(/\s/g,"-")),a.uniqueTags()&&-1!=a.tags.indexOf(b)||a.tags.push(b),a.$broadcast("clear")},module.controller("NGTagsController",["$scope",NGTagsController]),module.directive("ngTags",function(){return{restrict:"E",scope:{tags:"=model",tagClass:"&",tagEvents:"&events",replaceSpaces:"&",uniqueTags:"&uniqueTags"},templateUrl:"/tags.html",link:function(a,b){var c=b.children().children();b.bind("focus click",function(){c[0].focus()})},controller:["$scope",NGTagsController]}}),module.directive("tagsInput",function(){return{restrict:"E",require:"?ngModel",template:'<span contenteditable="true" class="tags-input"></span>',link:function(a,b,c,d){function e(){return d.$setViewValue(b.html().trim().replace(/(&nbsp;|<br>)/g,""))}var f='<span class="placeholder">'+c.placeholder+"</span>";d&&(String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/gm,"")}),d.$render=function(){var a=d.$viewValue;return a&&""!=a.trim()||(a=f),b.html(a.trim())},events={enter:!0,space:!1,comma:!1},c.events&&c.events.split(" ").forEach(function(a){self.events[a]=!0}),a.$on("clear",function(){b.html("")}),b.bind("focus",function(){b.html().trim()==f&&b.html("")}),b.bind("blur",d.$render),b.bind("keydown",function(c){a.$apply(function(){switch(c.which){case 32:events.space&&(a.$emit("space pressed"),c.preventDefault(),c.stopPropagation());break;case 13:events.enter&&(a.$emit("enter pressed"),c.preventDefault(),c.stopPropagation());break;case 188:events.comma&&(a.$emit("comma pressed"),c.preventDefault(),c.stopPropagation());break;case 8:""==b.html().trim()&&(a.$emit("backspace pressed"),c.preventDefault(),c.stopPropagation())}})}),b.bind("blur keyup change",function(){return d.$viewValue!==b.html().trim()&&b.html().trim()!=f?a.$apply(e):void 0}))},replace:!0}}),angular.module("ui.ngTags.templates",["/tags.html"]),angular.module("/tags.html",[]).run(["$templateCache",function(a){a.put("/tags.html",'<div class="form-control ng-tags">\n    <span class="tag label" ng-class="getTagsClass(tag)" ng-repeat="tag in tags track by $index">\n        {{ tag }}\n        <button type="button" class="close" aria-hidden="true" ng-click="removeTag(tag)">&times;</button>\n    </span>\n    <tags-input ng-model="newTag" class="tags-input" placeholder="Type to add tags" events="{{ tagEvents() }}"></tags-input>\n</div>')}]);